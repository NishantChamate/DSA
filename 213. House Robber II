class Solution {
public:
    int fun(vector<int>& nums, int s, int n, vector<int>& dp){
        if(n < s) return 0; 
        if(dp[n] != -1) return dp[n];
        if(n >= 2) nums[n] = nums[n] + fun(nums, s, n-2, dp);
        return dp[n] = max(nums[n], fun(nums, s, n-1, dp));
    }
    int rob(vector<int>& nums) {
        int n = nums.size();
        if (n == 1) return nums[0];

        vector<int> dp1(101,-1);
        vector<int> dp2(101,-1);

        int max1=fun(nums, 1, n-1, dp1);
        int max2=fun(nums, 0, n-2, dp2);

        return max(max1, max2);
    }
};
