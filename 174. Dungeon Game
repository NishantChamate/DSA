class Solution {
public:
    int calculateMinimumHP(vector<vector<int>>& dungeon) {
        int m = dungeon.size();
        int n = dungeon[0].size();
        
        vector<int> dp(n, 0);
        
        dp[n - 1] = max(1, 1 - dungeon[m - 1][n - 1]);
        
        for (int j = n - 2; j >= 0; --j) {
            dp[j] = max(1, dp[j + 1] - dungeon[m - 1][j]);
        }
        
        for (int i = m - 2; i >= 0; --i) {
            dp[n - 1] = max(1, dp[n - 1] - dungeon[i][n - 1]);
            for (int j = n - 2; j >= 0; --j) {
                int right = max(1, dp[j + 1] - dungeon[i][j]);
                int down = max(1, dp[j] - dungeon[i][j]);
                dp[j] = min(right, down);
            }
        }
        
        return dp[0];
    }
};
